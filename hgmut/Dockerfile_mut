FROM ubuntu:16.04
MAINTAINER Levi Mangarin "markmangarin@gmail.com"

################################################################################
# Install all the necessary software
################################################################################
# Python, R, Java 8, other dependencies
## Basic image utilities
### software-properties-common is for add-apt repository, coreutils for cut, open-ssh-client for scp
RUN apt-get update \
    && apt-get install -y --force-yes software-properties-common \
    && echo "deb http://cran.rstudio.com/bin/linux/ubuntu xenial/" | tee -a /etc/apt/sources.list \
    && gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9 \
    && gpg -a --export E084DAB9 | apt-key add - \
    && add-apt-repository ppa:openjdk-r/ppa \
    && apt-get update \
    && apt-get clean \
    && apt-get install -qqy software-properties-common git wget curl openssh-client unzip vim gcc gawk sed coreutils sudo net-tools r-base r-base-dev openjdk-8-jdk openjdk-7-jdk zlib1g-dev libncursesw5-dev libncurses5-dev maven g++ zlib1g-dev build-essential gcc python-setuptools python-dev python3-docutils python3-flask python3-pip python tabix libz-dev vcftools libcurl4-openssl-dev libssl-dev \
    && easy_install pip \
    && pip install numpy

RUN apt-get update --fix-missing

### Install Snakemake
RUN apt-get -qq update \
    && easy_install3 snakemake

### Install CMake
RUN sudo add-apt-repository ppa:george-edison55/cmake-3.x \
    && sudo apt-get update \
    && sudo apt-get install -qqy cmake

################################################################################
### Install GATK
RUN cd / \
    && git clone https://github.com/broadgsa/gatk-protected.git \
    && cd /gatk-protected \
    && mvn -version \
    && mvn clean verify -P\!queue \
    && mvn -Ddisable.queue install
    #&& git reset --hard 3.1 \

### Install samtools
RUN cd / && \
    wget https://github.com/samtools/samtools/releases/download/1.3.1/samtools-1.3.1.tar.bz2 && \
    bunzip2 samtools-1.3.1.tar.bz2 && \
    tar -xvf samtools-1.3.1.tar && \
    cd samtools-1.3.1 && \
    make

### Install bedtools2
RUN git clone https://github.com/arq5x/bedtools2.git && \
    cd bedtools2 && \
    make && \
    mkdir /bedtools && \
    cp bin/* /bedtools/

### Install BAMTools
RUN cd / && \
    git clone git://github.com/pezmaster31/bamtools.git && \
    cd bamtools && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make

################################################################################
### Install muTect
ENV ZIP=muTect-1.1.5-bin.zip
RUN cd / && mkdir muTect-1.1.5 && cd muTect-1.1.5 \
    && wget https://github.com/broadinstitute/mutect/releases/download/1.1.5/muTect-1.1.5-bin.zip -O $ZIP \
    && unzip $ZIP -d /

### Install strelka
RUN git clone https://github.com/genome-vendor/strelka strelka_build \
    && cd /strelka_build \
    && mkdir -p /strelka \
    && ./configure --prefix=/strelka \
    && make

### Install snpEff v4.1
ENV ZIP=snpEff_v4_1k_core.zip
ENV URL=https://github.com/BioDocker/software-archive/releases/download/snpEff
ENV FOLDER=snpEff-4.1
ENV DST=/

RUN wget $URL/$ZIP -O $DST/$ZIP && \
    unzip $DST/$ZIP -d $DST && \
    rm $DST/$ZIP && \
    bash -c 'echo -e "#!/bin/bash\njava -jar '$DST/$FOLDER'/snpEff.jar  \$@" > '$DST'/snpeff' && \
    chmod +x $DST/snpeff && \
    bash -c 'echo -e "#!/bin/bash\njava -jar '$DST/$FOLDER'/SnpSift.jar \$@" > '$DST'/snpsift' && \
    chmod +x $DST/snpsift

### Install snpEff v3.5 TODO
ENV ZIP=snpEff_v3_5_core.zip
ENV URL=https://ayera.dl.sourceforge.net/project/snpeff
ENV FOLDER=snpEff-3.5
ENV DST=/

RUN cd / \
    && wget $URL/$ZIP -O $ZIP \
    && yes y | unzip $ZIP -d $DST \
    && rm $ZIP \
    && yes y | bash -c 'echo -e "#!/bin/bash\njava -jar '$DST/$FOLDER'/snpEff.jar  \$@" > '$DST/$FOLDER'' \
    && yes y | bash -c 'echo -e "#!/bin/bash\njava -jar '$DST/$FOLDER'/SnpSift.jar \$@" > '$DST/$FOLDER'' \
    chmod +x $DST/$FOLDER


################################################################################
# Configure the image
## Clone the most recent version of the pipeline and create project directories
################################################################################
WORKDIR /

RUN git clone https://github.com/levvim/ds_pipeline.git /ds_pipeline && \
    mkdir PROJECT && \
    cd PROJECT && \
    mkdir raw complete

## Set environment variables
ENV HOME /root
ENV WORK_DIR /PROJECT/
ENV PATH="/bedtools:/samtools-1.3.1:/strelka/libexec:/bamtools/bin:${PATH}"
ENV CLASSPATH="snpEff/snpEff.jar:snpEff/SnpSift.jar:/muTect-1.1.5/muTect-1.1.5.jar:/gatk-protected/target/GenomeAnalysisTK.jar:$CLASSPATH"

################################################################################
# Import any additional data
## Import necessary reference files

## Download the input files into the project directory
RUN cd /PROJECT/raw/ \
    && for i in 1 2 3 4 5; do echo "sample $i" > "$i".txt; done

################################################################################
# List filetree before execution
WORKDIR /
RUN ls -alR | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/' > filetree_origin.txt

# Execute the pipeline
RUN snakemake -d /PROJECT/ --snakefile /ds_pipeline/hgmut/Snakefile
